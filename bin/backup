#!/bin/sh -efu

show_help()
{
        cat <<EOF
backup - backup file with datastemp in the name

Usage: $0 [options] <filename>

Options:
  -d <dir>    set backup directory (default .)
  -p          print backup filename
  -m          move file instead of copying
  -z          compress with gzip
  -D          backup into YYYYMMDD subdirs

EOF
        exit
}

BACKUP_DIR=.
PRINT_NAME=
MOVE=
GZIP=
DATE=

TEMP=$(getopt -n "$0" -o "pd:mzD" -- "$@") || show_help
eval set -- "$TEMP"

while :; do
  case "$1" in
    --) shift; break
    ;;
    -d) BACKUP_DIR="$2"; shift
    ;;
    -p) PRINT_NAME=1
    ;;
    -m) MOVE=1
    ;;
    -z) GZIP=1
    ;;
    -D) DATE=1
    ;;
    *)  show_help
  esac
  shift
done

[ "$#" -ge 1 ] || show_help

mkdir -p -- "$BACKUP_DIR"

for in_file in "$@"; do
  fname="${in_file##*/}"
  base="${fname%.*}"
  ext="${fname##*.}"
  [ "$ext" = "$base" ] && ext="" || ext=".$ext"

  dx="$(stat -c %Y -- "$in_file" )"
  d="$(date -d "@$dx" +"%Y%m%d")"

  f=
  if [ -z "$DATE" ]; then
    f="$BACKUP_DIR/${base}:$d$ext"
    n=1
    while [ -f "$f" -o -f "$f.gz" ]; do
      f="$BACKUP_DIR/${base}:${d}:$n$ext"
      n=$(($n+1))
    done
  else
    f="$BACKUP_DIR/$d/${base}$ext"
    mkdir -p -- "$BACKUP_DIR/$d"
    n=1
    while [ -f "$f" -o -f "$f.gz" ]; do
      f="$BACKUP_DIR/$d/${base}:$n$ext"
      n=$(($n+1))
    done
  fi

  [ -z "$MOVE" ] &&
    cp -- "$in_file" "$f" ||
    mv -- "$in_file" "$f"
  [ -z "$GZIP" ] || {
    gzip "$f"
    f=$f.gz
  }

  [ -z "$PRINT_NAME" ] || printf "%s\n" "$f"
done
