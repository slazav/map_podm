#!/bin/bash -eu

# Pack tiles into mbtiles database
# Based on script written by @ioctl
# Usage: make_sqlitedb <tile dir> <out file>
# Tile format: x-y-z.png, z/x-y.png

TILE_DIR=$1
MBTILES=$2

# Remove output file if it exists
rm -f -- "$MBTILES"

# Create database
sqlite3 "$MBTILES" 'CREATE TABLE tiles (tile_column int, tile_row int,
  zoom_level int, tile_data blob,
  PRIMARY KEY (tile_column, tile_row, zoom_level));'

# Find all tiles and put them into db
find "$TILE_DIR" -type f -name '*.png' | (
  echo 'PRAGMA journal_mode = OFF; PRAGMA synchronous = 0;'
  while read tile; do

    xyz="$(echo "$tile" | sed -rne '
      s|^.*/([0-9]+)-([0-9]+)-([0-9]+).*$|\1 \2 \3|p
      s|^.*/([0-9]+)/([0-9]+)-([0-9]+).*$|\2 \3 \1|p
    ')"
    read x y z <<< "$xyz"

    echo -n "INSERT INTO tiles (tile_column, tile_row, "
    echo -n "zoom_level, tile_data) VALUES "
    echo    "($x, $((2**z-1-y)), $z, readfile('$tile'));"
done )  | sqlite3 "$MBTILES"

# Create metadata table
sqlite3 "$MBTILES" "CREATE TABLE metadata (format text, minzoom int,
  maxzoom int);"
sqlite3 "$MBTILES" "INSERT INTO metadata (format, minzoom, maxzoom)
  VALUES ('png', (SELECT min(zoom_level) FROM tiles),
  (SELECT max(zoom_level) FROM tiles))"
